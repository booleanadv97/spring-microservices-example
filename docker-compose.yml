services:
  # Database Services
  customer-db:
    image: mysql:8.0
    environment:
      MYSQL_DATABASE: customer_db
      MYSQL_USER: customer_db_admin
      MYSQL_PASSWORD: customer_db_admin_password
      MYSQL_ROOT_PASSWORD: customer_db_admin_password
    ports:
      - "3306:3306"
    networks:
      - app-network
    profiles:
      - database
    volumes:
      - customer_db_data:/var/lib/mysql

  product-db:
    image: mysql:8.0
    environment:
      MYSQL_DATABASE: product_db
      MYSQL_USER: product_db_admin
      MYSQL_PASSWORD: product_db_admin_password
      MYSQL_ROOT_PASSWORD: product_db_admin_password
    ports:
      - "3307:3306"
    networks:
      - app-network
    profiles:
      - database
    volumes:
      - product_db_data:/var/lib/mysql

# Spring Cloud Netflix Eureka
  eureka-server:
    image: eureka-server
    build:
      context: ./eureka-server
    ports:
      - "8761:8761"
    profiles:
      - server
    networks:
      - app-network

  # Spring Cloud Gateway
  gateway:
    image: gateway
    build:
      context: ./gateway
    ports:
      - "8080:8080"
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka/
    depends_on:
      - product-service
      - inventory-service
      - customer-service
    networks:
      - app-network

  # Application services
  customer-service:
    build:
      context: ./customer-service
      dockerfile: Dockerfile
    ports:
      - "8081:8080"
    depends_on:
      - customer-db
      - eureka-server
    networks:
      - app-network
    environment:
      DATASOURCE_CUSTOMER_URL: jdbc:mysql://customer-db:3306/customer_db
      DATASOURCE_CUSTOMER_USERNAME: customer_db_admin
      DATASOURCE_CUSTOMER_PASSWORD: customer_db_admin_password
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka/
    profiles:
      - app

  product-service:
    build:
      context: ./product-service
      dockerfile: Dockerfile
    ports:
      - "8082:8080"
    depends_on:
      - product-db
      - kafka
      - eureka-server
    networks:
      - app-network
    environment:
      DATASOURCE_PRODUCT_URL: jdbc:mysql://product-db:3306/product_db
      DATASOURCE_PRODUCT_USERNAME: product_db_admin
      DATASOURCE_PRODUCT_PASSWORD: product_db_admin_password
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka/
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    profiles:
      - app

  inventory-service:
    build:
      context: ./inventory-service
      dockerfile: Dockerfile
    ports:
      - "8083:8080"
    depends_on:
      - product-db
      - product-service
      - kafka
      - eureka-server
    networks:
      - app-network
    environment:
      DATASOURCE_INVENTORY_URL: jdbc:mysql://product-db:3306/product_db
      DATASOURCE_INVENTORY_USERNAME: product_db_admin
      DATASOURCE_INVENTORY_PASSWORD: product_db_admin_password
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka/
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    profiles:
      - app

  zookeeper:
    image: confluentinc/cp-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"
    networks:
      - app-network

  kafka:
    image: confluentinc/cp-kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_SUPPORT_METRICS_ENABLE: "false"
    depends_on:
      - zookeeper
    networks:
      - app-network

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    environment:
      KAFKA_CLUSTERS_0_NAME: "local-kafka"
      KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS: "kafka:9092"
    ports:
      - "9090:8080"
    depends_on:
      - kafka
    networks:
      - app-network

networks:
  app-network:

volumes:
  product_db_data:
  customer_db_data: